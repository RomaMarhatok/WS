"""fake tables

Revision ID: 76cd03b10ee3
Revises:
Create Date: 2025-08-19 17:56:01.778746

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "76cd03b10ee3"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "animals",
        sa.Column("animal_name", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuididf", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uuididf"),
    )
    op.create_index(
        op.f("ix_animals_animal_name"), "animals", ["animal_name"], unique=True
    )
    op.create_table(
        "animal_onwers",
        sa.Column("owner_name", sa.String(length=100), nullable=False),
        sa.Column("animal_uuidfidf", sa.UUID(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuididf", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["animal_uuidfidf"],
            ["animals.uuididf"],
            onupdate="CASCADE",
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("animal_uuidfidf"),
        sa.UniqueConstraint("uuididf"),
    )
    op.create_index(
        op.f("ix_animal_onwers_owner_name"),
        "animal_onwers",
        ["owner_name"],
        unique=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_animal_onwers_owner_name"), table_name="animal_onwers")
    op.drop_table("animal_onwers")
    op.drop_index(op.f("ix_animals_animal_name"), table_name="animals")
    op.drop_table("animals")
    # ### end Alembic commands ###
